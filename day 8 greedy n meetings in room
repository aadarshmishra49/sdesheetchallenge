problem - n meeting in a room 

if only ask for total count 
link --  https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1#

 
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        int count = 0;
        vector<pair<int,int>> arr;
        for(int i=0;i<n;i++){
            arr.push_back({end[i],start[i]});
        }
        sort(arr.begin(),arr.end());
        int prev = -1;
        for(int i=0;i<n;i++){
            if(arr[i].second > prev){
                count++;
                prev = arr[i].first;
            }
        }
        return count;

    }
    
   problem - 2 if ask for position also
   
   #include<bits/stdc++.h>

struct meeting{
    int s;
    int e;
    int pos;
};



bool comparator(struct meeting m1,meeting m2){
    if(m1.e<m2.e) return true;
    else if(m1.e>m2.e) return false;
    else if(m1.pos<m2.pos) return true;
    else return false;
}

vector<int> maximumMeetings(vector<int> &start, vector<int> &end) {
    // Write your code here.
        int n=start.size();
    struct meeting meet[n];
    for(int i=0;i<n;i++){
        meet[i].s=start[i],meet[i].e=end[i],meet[i].pos=i+1;
    }
    sort(meet,meet+n,comparator);
    vector<int> ans;
    int ending=meet[0].e;
    //first meeting toh hoge hee hogii
    ans.push_back(meet[0].pos);
    //last mai humhe positions chhaiye bss
    for(int i=1;i<n;i++){
        if(meet[i].s>ending){
            ending=meet[i].e;
            ans.push_back(meet[i].pos);
        }
    }
    return ans;

}

time - nlogn 
space - n 
